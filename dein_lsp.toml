[[plugins]]
repo = 'neovim/nvim-lspconfig'

[[plugins]]
repo = 'williamboman/mason.nvim'
lua_add = '''
require('mason').setup()
'''

[[plugins]]
repo = 'williamboman/mason-lspconfig.nvim'
lua_add = '''
require('mason_lspconfig')
'''

[[plugins]]
repo = 'hrsh7th/nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lsp'

[[plugins]]
repo = 'hrsh7th/cmp-nvim-lua'

[[plugins]]
repo = 'hrsh7th/cmp-buffer'

[[plugins]]
repo = 'hrsh7th/cmp-cmdline'
lua_add = '''
require'cmp'.setup.cmdline(':', {
  sources = {
    { name = 'cmdline' }
  }
})
require'cmp'.setup.cmdline('/', {
  sources = {
    { name = 'buffer' }
  }
})
'''


[[plugins]]
repo = 'hrsh7th/cmp-path'
lua_add = '''
local cmp = require("cmp")
cmp.setup.cmdline(":", {
  mapping = cmp.mapping.preset.cmdline(),
  sources = {
    { name = "path" },
  },
})
'''

[[plugins]]
repo = 'onsails/lspkind.nvim'
lua_add = '''
local lspkind = require 'lspkind'
local cmp = require("cmp")
cmp.setup({
  formatting = {
    format = lspkind.cmp_format({
      mode = 'symbol',
      maxwidth = 50,
      ellipsis_char = '...',
    })
  }
})
'''

[[plugins]]
repo = 'quangnguyen30192/cmp-nvim-ultisnips'
lua_add = '''
local cmp = require("cmp")
cmp.setup({
  snippet = {
    expand = function(args)
      vim.fn["UltiSnips#Anon"](args.body)
    end,
  }
})
'''

[[plugins]]
repo = 'sirver/ultisnips'
hook_add = '''
let g:UltiSnipsExpandTrigger = '<C-j>'
let g:UltiSnipsJumpForwardTrigger = '<C-j>'
let g:UltiSnipsJumpBackwardTrigger = '<C-k>'
'''

[[plugins]]
repo  = 'hrsh7th/cmp-nvim-lsp-signature-help'

[[plugins]]
repo = 'j-hui/fidget.nvim'
lua_add = '''
require("fidget").setup()
'''


[[plugins]]
repo = 'WhoIsSethDaniel/toggle-lsp-diagnostics.nvim'
lua_add = '''
require('toggle_lsp_diagnostics').init()
'''

[[plugins]]
repo = 'glepnir/lspsaga.nvim'
# TODO: 設定を行う

